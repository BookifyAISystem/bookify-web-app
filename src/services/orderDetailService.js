import api from "./apiService";

const ORDER_DETAIL_ENDPOINT = "/order-detail";

// ‚úÖ L·∫•y t·∫•t c·∫£ chi ti·∫øt ƒë∆°n h√†ng
export const getAllOrderDetails = async () => {
    try {
        const response = await api.get(ORDER_DETAIL_ENDPOINT);
        return response.data || [];
    } catch (error) {
        console.error("‚ùå L·ªói khi l·∫•y danh s√°ch OrderDetails:", error);
        return [];
    }
};

// ‚úÖ L·∫•y chi ti·∫øt ƒë∆°n h√†ng theo orderDetailId (n·∫øu API h·ªó tr·ª£)
export const getOrderDetailById = async (id) => {
    try {
        const response = await api.get(`${ORDER_DETAIL_ENDPOINT}/${id}`);
        return response.data || null;
    } catch (error) {
        console.error(`‚ùå L·ªói khi l·∫•y OrderDetail v·ªõi id ${id}:`, error);
        return null;
    }
};

// ‚úÖ L·∫•y danh s√°ch s·∫£n ph·∫©m trong ƒë∆°n h√†ng (fix l·ªói 404)
export const getOrderDetailsByOrderId = async (orderId) => {
    try {
        // üöÄ Ki·ªÉm tra ƒë∆∞·ªùng d·∫´n API ch√≠nh x√°c v·ªõi backend
        const response = await api.get(`/order-detail?orderId=${orderId}`); 

        return response.data || []; 
    } catch (error) {
        console.error(`‚ùå L·ªói khi l·∫•y OrderDetails theo orderId ${orderId}:`, error);
        return [];
    }
};


// ‚úÖ Th√™m s·∫£n ph·∫©m v√†o ƒë∆°n h√†ng (n·∫øu ch∆∞a c√≥)
export const createOrderDetail = async (orderDetail) => {
    try {
        const response = await api.post(ORDER_DETAIL_ENDPOINT, orderDetail);
        return response.data || null;
    } catch (error) {
        console.error("‚ùå L·ªói khi t·∫°o OrderDetail:", error);
        return null;
    }
};

// ‚úÖ C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m
export const updateOrderDetail = async (id, orderDetail) => {
    try {
        console.log(`üì§ G·ª≠i request c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng: /order-detail/${id}`, orderDetail);

        const response = await api.put(`${ORDER_DETAIL_ENDPOINT}/${id}`, orderDetail);

        if (response.status === 204) {
            console.log("‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng (204 No Content)");
            return true;
        } else if (response.data) {
            console.log("‚úÖ API tr·∫£ v·ªÅ:", response.data);
            return response.data;
        } else {
            console.error("‚ùå API ph·∫£n h·ªìi nh∆∞ng kh√¥ng c√≥ d·ªØ li·ªáu.");
            return null;
        }
    } catch (error) {
        console.error(`‚ùå L·ªói khi c·∫≠p nh·∫≠t OrderDetail v·ªõi id ${id}:`, error);
        return null;
    }
};

// ‚úÖ X√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng
export const deleteOrderDetail = async (id) => {
    try {
        const response = await api.delete(`${ORDER_DETAIL_ENDPOINT}/${id}`);
        return response.data || null;
    } catch (error) {
        console.error(`‚ùå L·ªói khi x√≥a OrderDetail v·ªõi id ${id}:`, error);
        return null;
    }
};

// ‚úÖ Thay ƒë·ªïi tr·∫°ng th√°i s·∫£n ph·∫©m trong gi·ªè h√†ng
export const changeStatus = async (id, status) => {
    try {
        const response = await api.put(`${ORDER_DETAIL_ENDPOINT}/${id}/status`, { status });
        return response.data || null;
    } catch (error) {
        console.error(`‚ùå L·ªói khi ƒë·ªïi tr·∫°ng th√°i OrderDetail v·ªõi id ${id}:`, error);
        return null;
    }
};
