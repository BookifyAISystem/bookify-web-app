import api from "./apiService";

const ORDER_ENDPOINT = "/order";

export const getAllOrders = async () => {
    try {
        const response = await api.get(ORDER_ENDPOINT);
        return response.data || [];
    } catch (error) {
        console.error("‚ùå L·ªói khi l·∫•y danh s√°ch ƒë∆°n h√†ng:", error);
        return [];
    }
};

export const getOrderById = async (id) => {
    try {
        const response = await api.get(`${ORDER_ENDPOINT}/${id}`);
        return response.data || null;
    } catch (error) {
        console.error(`‚ùå L·ªói khi l·∫•y Order v·ªõi id ${id}:`, error);
        return null;
    }
};

export const createOrder = async (orderData) => {
    try {
        const response = await api.post(ORDER_ENDPOINT, orderData, {
            headers: {
                "Content-Type": "application/json",
            },
        });

        // N·∫øu API ch·ªâ tr·∫£ v·ªÅ `{ message: "Order created successfully" }`, c·∫ßn fetch l·∫°i ƒë∆°n h√†ng
        if (!response.data || !response.data.orderId) {
            console.warn("‚ö†Ô∏è API kh√¥ng tr·∫£ v·ªÅ orderId, ƒëang fetch l·∫°i ƒë∆°n h√†ng...");
            return await getLatestOrderByAccount(orderData.accountId);
        }

        return response.data;
    } catch (error) {
        console.error("‚ùå L·ªói khi t·∫°o ƒë∆°n h√†ng:", error.response ? error.response.data : error.message);
        return null;
    }
};

export const updateOrder = async (id, order) => {
    try {
        const response = await api.put(`${ORDER_ENDPOINT}/${id}`, order);
        return response.data || null;
    } catch (error) {
        console.error(`‚ùå L·ªói khi c·∫≠p nh·∫≠t Order v·ªõi id ${id}:`, error);
        return null;
    }
};

export const deleteOrder = async (id) => {
    try {
        const response = await api.delete(`${ORDER_ENDPOINT}/${id}`);
        return response.data || null;
    } catch (error) {
        console.error(`‚ùå L·ªói khi x√≥a Order v·ªõi id ${id}:`, error);
        return null;
    }
};

export const changeStatus = async (id, status) => {
    try {
        const response = await api.put(`${ORDER_ENDPOINT}/${id}/status`, { status });
        return response.data || null;
    } catch (error) {
        console.error(`‚ùå L·ªói khi ƒë·ªïi tr·∫°ng th√°i Order v·ªõi id ${id}:`, error);
        return null;
    }
};

// ‚úÖ L·∫•y ƒë∆°n h√†ng m·ªõi nh·∫•t c·ªßa user (d√πng n·∫øu API kh√¥ng h·ªó tr·ª£ query theo accountId)
export const getLatestOrderByAccount = async (accountId) => {
    try {
        const response = await api.get(ORDER_ENDPOINT);
        const orders = response.data || [];

        if (!orders.length) {
            console.log("‚ùå Kh√¥ng t√¨m th·∫•y ƒë∆°n h√†ng n√†o.");
            return null;
        }

        // üî• L·ªçc ƒë∆°n h√†ng c·ªßa user v√† l·∫•y ƒë∆°n h√†ng m·ªõi nh·∫•t
        const latestOrder = orders
            .filter(order => order.accountId === accountId && order.status === 1)
            .sort((a, b) => new Date(b.createdDate) - new Date(a.createdDate))[0];

        return latestOrder || null;
    } catch (error) {
        console.error(`‚ùå L·ªói khi l·∫•y ƒë∆°n h√†ng m·ªõi nh·∫•t c·ªßa accountId ${accountId}:`, error);
        return null;
    }
};

// ‚úÖ L·∫•y ƒë∆°n h√†ng c·ªßa t√†i kho·∫£n
export const getOrderByAccount = async (accountId) => {
    try {
        const response = await api.get(`${ORDER_ENDPOINT}?accountId=${accountId}`);
        const orders = response.data || [];

        if (!orders.length) {
            console.log("‚ùå Kh√¥ng c√≥ ƒë∆°n h√†ng n√†o.");
            return null;
        }

        // üî• L·∫•y ƒë∆°n h√†ng c√≥ tr·∫°ng th√°i `status === 1`
        return orders.find(order => order.status === 1) || null;
    } catch (error) {
        console.error(`‚ùå L·ªói khi l·∫•y Order theo accountId ${accountId}:`, error);
        return null;
    }
};

// ‚úÖ L·∫•y danh s√°ch s·∫£n ph·∫©m trong ƒë∆°n h√†ng
export const getOrderDetailsByOrderId = async (orderId) => {
    try {
        const response = await api.get(`${ORDER_ENDPOINT}/${orderId}`);
        return response.data?.orderDetails || []; // Tr·∫£ v·ªÅ danh s√°ch s·∫£n ph·∫©m ho·∫∑c []
    } catch (error) {
        console.error(`‚ùå L·ªói khi l·∫•y OrderDetails theo orderId ${orderId}:`, error);
        return [];
    }
};
